{% for peertube_runner in peertube_runners %}
{% set runner_dashed_name = peertube_runner.name | replace('_', '-') %}
---
apiVersion: v1
kind: Deployment
metadata:
  labels:
    app: peertuberunner
    service: "app-{{ runner_dashed_name }}"
    version: "{{ peertube_runner_image_tag }}"
  name: "peertuberunner-app-{{ runner_dashed_name }}"
  namespace: "{{ namespace_name }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: peertuberunner
      service: "app-{{ runner_dashed_name }}"
      deployment: "peertuberunner-app-{{ runner_dashed_name }}"
  template:
    metadata:
      labels:
        app: peertuberunner
        service: "app-{{ runner_dashed_name }}"
        deployment: "peertuberunner-app-{{ runner_dashed_name }}"
    spec:
      # Prefer running pods on different nodes for redundancy
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: deployment
                      operator: In
                      values:
                        - "peertuberunner-app-{{ runner_dashed_name }}"
                topologyKey: kubernetes.io/hostname
{% set image_pull_secret_name = peertube_runner_image_pull_secret_name | default(none) or default_image_pull_secret_name %}
{% if image_pull_secret_name is not none %}
      imagePullSecrets:
        - name: "{{ image_pull_secret_name }}"
{% endif %}
      containers:
        - name: peertuberunner
          image: "{{ peertube_runner_image_name }}:{{ peertube_runner_image_tag }}"
          imagePullPolicy: Always
{% if peertube_runner.enable_job is defined %}
          args:
            - peertube-runner
            - server
{% for enable_job in peertube_runner.enable_job %}
            - --enable-job
            - {{ enable_job }}
{% endfor %}
{% endif %}
          livenessProbe:
            exec:
              command: ["/bin/bash", "-c", "peertube-runner list-registered | grep $PEERTUBE_RUNNER_{{ peertube_runner.name }}_REGISTERED_INSTANCE_URL"]
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
          readinessProbe:
            exec:
              command: ["sh", "-c", "peertube-runner list-registered | grep $PEERTUBE_RUNNER_{{ peertube_runner.name }}_REGISTERED_INSTANCE_URL"]
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5
          env:
            - name: PEERTUBE_RUNNER_JOBS_CONCURRENCY
              value: "{{ peertube_runner.jobs_concurrency }}"
            - name: PEERTUBE_RUNNER_FFMPEF_THREADS
              value: "{{ peertube_runner.ffmpeg_threads }}"
            - name: PEERTUBE_RUNNER_FFMPEG_NICE
              value: "{{ peertube_runner.ffmpeg_nice }}"
            - name: PEERTUBE_RUNNER_TRANSCRIPTION_MODEL
              value: "{{ peertube_runner.transcription_model }}"
            - name: PEERTUBE_RUNNER_REGISTERED_INSTANCE_RUNNER_NAME
              value: "{{ peertube_runner.name }}"
            - name: DOCKER_USER
              value: node
            - name: HOME
              value: /home/node
          envFrom:
            - secretRef:
                name: "{{ peertube_runner_secret_name }}"
          resources: {{ peertube_runner.app_resources }}
          volumeMounts:
            - mountPath: /home/node
              name: peertube-config
      securityContext:
        runAsUser: {{ container_uid }}
        runAsGroup: {{ container_gid }}
      volumes:
        - name: peertube-config
          emptyDir: {}  # volume that lives as long as the pod lives

{% endfor %}
